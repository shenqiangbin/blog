@model StaticPagedList<CommentInfo>

@{
    ViewBag.Title = "首页";
    if (Blog.Common.BrowserHelper.IsPhone())
    {
        Layout = "~/Views/Shared/_mLayout.cshtml";
    }
}

@section header{
    @if (Blog.Common.BrowserHelper.IsPhone())
    {
        @Styles.Render("~/Content/mCommentList")
    }
    else
    {
        @Styles.Render("~/Content/commentList")
    }
}

<style>
    table{
        border-collapse:collapse;
        font-family:微软雅黑;
        font-size:small;      
        width:100%;      
    }
    table td, table th
    {
        border:1px solid red;
        text-align:left;
        height:30px;
    }
</style>

<div class="content">
    <div class="indexcontainer">
        <span><a href="@Url.Action("index","home")">返回</a></span>
        <h4>评论信息</h4>               
        @if (Model == null || Model.Count == 0)
        {
            <div class="record">
                暂无数据
            </div>
        }
        else
        {
            <table>
                @foreach (var item in Model)
                {
                    <tr class="record">
                        <td style="width:80px;">
                            <a href="javascript:del(@item.CommentId);">删除</a>
                        </td>
                        <td style="width:300px;">
                            <a target="_blank" href="@Url.Action("Detail","Home", new { area = "", id = item.ArticleId })">@item.ArticleTitle</a>
                        </td>
                        <td style="width:60px;">@item.UserName <br/> <span>@item.Email</span> <br /> <a target="_blank" href="@item.Site">@item.Site</a></td>
                        <td style="width:150px;">@item.CreateTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>@Html.Raw(item.Content)</td>
                    </tr>
                }
            </table>
        }
        @if (Model.PageCount > 1)
        {
            <div>@Html.PagedListPager((IPagedList)(Model), p => Url.Action("List", new { page = p }), PagedListRenderOptions.ClassicPlusFirstAndLast)</div>
        }

        <i-table :columns="columns" :data="listModel.List">
            <template slot-scope="{ row }" slot="article">
                @*//articles/{item.UrlTitle}.html*@                
                <a target="_blank" v-bind:href="'/home/detail?id='+row.ArticleId">{{ row.ArticleTitle }}</a>
            </template>
            <template slot-scope="{ row, index }" slot="action">
                <i-button type="primary" size="small" style="margin-right: 5px" v-on:click="show(index)">View</i-button>
                <i-button type="error" size="small" v-on:click="remove(index)">Delete</i-button>
            </template>
        </i-table>

       <div style="text-align: center;margin-top: 20px;">
           <Page v-bind:total="listModel.TotalCount" v-bind:current="listModel.CurrentPage" v-bind:page-size="listModel.PageSize" show-elevator show-sizer />
       </div>        

    </div>
</div>

@section footer{
<script>
    var delUrl = '@Url.Action("delete")';
    var getListUrl = '@Url.Action("GetList")';

    function del(commentId) {
        if (confirm("删除确认？")) {
            $.post(delUrl, { commentId:commentId }, function () {
                window.location.reload();
            });
        }
    }

    var dataFunc = {
        columns: [
            { title: '文章', slot: 'article' },
            { title: '评论', key: 'comment' },
            { title: '操作', slot: 'action', width: 150, align: 'center' },
        ],
        listModel:{
            List: [
                { article: '小明测试', comment: '不错哈' },
            ],
            TotalCount: null,
            CurrentPage: 1,
            PageSize: 10
        }
    }

    var loadData = function () {
        var data = { page: app.listModel.CurrentPage, pageSize: app.listModel.PageSize };
        $.ajax({
            type: "POST",
            url: getListUrl,
            data:data,
            success: function (result) {
                console.log(result);
                if (result.code == 200) {
                    app.listModel = result.data;
                }
            },
            error: function (msg) {
                alert(msg);
            }

        });
    }

    var app = new Vue({
        el: "#app",
        data: dataFunc,
        methods: {
            loadData:loadData,
            show (index) {
                this.$Modal.info({
                    title: 'User Info',
                    content: `Name：${this.dataList[index].name}<br>Age：${this.dataList[index].age}<br>Address：${this.dataList[index].address}`
                })
            },
            remove (index) {
                this.dataList.splice(index, 1);
            }
        }
    });

    app.loadData();

</script>
}